import e from"path-to-regexp";const{hasOwnProperty:t}=Object.prototype,r=new Map;function n(e){try{return decodeURIComponent(e)}catch(t){return e}}function o(l,s,u,a,i){let c,h=null,p=0;return{next(f){if(l===f)return{done:!0,value:void 0};if(!h&&(h=function(o,l,s,u){const a=!o.children,i=`${o.path||""}|${a}`;let c=r.get(i);if(!c){const t=[];c={keys:t,pattern:e(o.path||"",t,{end:a})},r.set(i,c)}const h=c.pattern.exec(l);if(!h)return null;const p=h[0],f={...u};for(let e=1;e<h.length;e++){const r=c.keys[e-1],o=r.name,l=h[e];void 0===l&&t.call(f,o)||(r.repeat?f[o]=l?l.split(r.delimiter).map(n):[]:f[o]=l?n(l):l)}return{path:a||"/"!==p.charAt(p.length-1)?p:p.substr(1),keys:s.concat(c.keys),params:f}}(l,u,a,i)))return{done:!1,value:{route:l,baseUrl:s,path:h.path,keys:h.keys,params:h.params}};if(h&&l.children)for(;p<l.children.length;){if(!c){const e=l.children[p];e.parent=l,c=o(e,s+h.path,u.substr(h.path.length),h.keys,h.params)}const e=c.next(f);if(!e.done)return{done:!1,value:e.value};c=null,p++}return{done:!0,value:void 0}}}}function l(e,t){if("function"==typeof e.route.action)return e.route.action(e,t)}class s{constructor(e,t={context:{}}){if(!e||"object"!=typeof e)throw new TypeError("Invalid routes");this.baseUrl=t.baseUrl||"",this.errorHandler=t.errorHandler,this.resolveRoute=t.resolveRoute||l,this.context={router:this,...t.context},this.root=Array.isArray(e)?{path:"",children:e,parent:null}:e,this.root.parent=null}resolve(e){const t={...this.context,..."string"==typeof e?{pathname:e}:e},r=o(this.root,this.baseUrl,t.pathname.substr(this.baseUrl.length),[],null),n=this.resolveRoute;let l=null,s=null,u=t;function a(e,o=(l&&l.value?l.value.route:null),i){const c=l&&l.value?l.value.route:null,h=null===i?c:null;if(l=s||r.next(h),s=null,!e&&(l.done||!function(e,t){if(null===e)return!1;let r=t;for(;r;)if((r=r.parent)===e)return!0;return!1}(o,l.value.route)))return s=l,Promise.resolve(null);if(l.done){const e=new Error("Route not found");return e.status=404,Promise.reject(e)}const p={...t,...l.value};return u=p,Promise.resolve(n(p,l.value.params)).then(t=>null!=t?t:a(e,o,t))}return t.next=a,Promise.resolve().then(()=>a(!0,this.root)).catch(e=>{if(this.errorHandler)return this.errorHandler(e,u);throw e})}}s.pathToRegexp=e;export default s;
//# sourceMappingURL=universal-router.esm.min.js.map
