{"version":3,"file":"universal-router-generate-urls.js","sources":["../src/generateUrls.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright Â© 2015-present Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* eslint no-param-reassign: ['error', { props: false }] */\n\nimport Router from './Router';\n\nconst cache = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  if (routesByName[route.name]) {\n    throw new Error(`Route \"${route.name}\" already exists`);\n  }\n\n  if (route.name) {\n    routesByName[route.name] = route;\n  }\n\n  if (routes) {\n    for (let i = 0; i < routes.length; i += 1) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.children);\n    }\n  }\n}\n\nfunction generateUrls(router, options) {\n  if (!(router instanceof Router)) {\n    throw new TypeError('An instance of Router is expected');\n  }\n\n  router.routesByName = router.routesByName || {};\n\n  return (routeName, params) => {\n    let route = router.routesByName[routeName];\n    if (!route) {\n      router.routesByName = {}; // clear cache\n      cacheRoutes(router.routesByName, router.root, router.root.children);\n\n      route = router.routesByName[routeName];\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let path = '';\n    while (route) {\n      if (route.path !== '/') {\n        let toPath = cache.get(route.path);\n        if (!toPath) {\n          toPath = Router.pathToRegexp.compile(route.path);\n          cache.set(route.path, toPath);\n        }\n        path = toPath(params, options) + path;\n      }\n      route = route.parent;\n    }\n\n    return router.baseUrl + path || '/';\n  };\n}\n\nRouter.generateUrls = generateUrls;\n\nexport default generateUrls;\n"],"names":["cache","Map","cacheRoutes","routesByName","route","routes","name","Error","i","length","childRoute","parent","children","generateUrls","router","options","Router","TypeError","routeName","params","root","path","toPath","get","pathToRegexp","compile","set","baseUrl"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;AAWA,AAEA,IAAMA,QAAQ,IAAIC,GAAJ,EAAd;;AAEA,SAASC,WAAT,CAAqBC,YAArB,EAAmCC,KAAnC,EAA0CC,MAA1C,EAAkD;MAC5CF,aAAaC,MAAME,IAAnB,CAAJ,EAA8B;UACtB,IAAIC,KAAJ,aAAoBH,MAAME,IAA1B,sBAAN;;;MAGEF,MAAME,IAAV,EAAgB;iBACDF,MAAME,IAAnB,IAA2BF,KAA3B;;;MAGEC,MAAJ,EAAY;SACL,IAAIG,IAAI,CAAb,EAAgBA,IAAIH,OAAOI,MAA3B,EAAmCD,KAAK,CAAxC,EAA2C;UACnCE,aAAaL,OAAOG,CAAP,CAAnB;iBACWG,MAAX,GAAoBP,KAApB;kBACYD,YAAZ,EAA0BO,UAA1B,EAAsCA,WAAWE,QAAjD;;;;;AAKN,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,OAA9B,EAAuC;MACjC,EAAED,kBAAkBE,MAApB,CAAJ,EAAiC;UACzB,IAAIC,SAAJ,CAAc,mCAAd,CAAN;;;SAGKd,YAAP,GAAsBW,OAAOX,YAAP,IAAuB,EAA7C;;SAEO,UAACe,SAAD,EAAYC,MAAZ,EAAuB;QACxBf,QAAQU,OAAOX,YAAP,CAAoBe,SAApB,CAAZ;QACI,CAACd,KAAL,EAAY;aACHD,YAAP,GAAsB,EAAtB,CADU;kBAEEW,OAAOX,YAAnB,EAAiCW,OAAOM,IAAxC,EAA8CN,OAAOM,IAAP,CAAYR,QAA1D;;cAEQE,OAAOX,YAAP,CAAoBe,SAApB,CAAR;UACI,CAACd,KAAL,EAAY;cACJ,IAAIG,KAAJ,aAAoBW,SAApB,iBAAN;;;;QAIAG,OAAO,EAAX;WACOjB,KAAP,EAAc;UACRA,MAAMiB,IAAN,KAAe,GAAnB,EAAwB;YAClBC,SAAStB,MAAMuB,GAAN,CAAUnB,MAAMiB,IAAhB,CAAb;YACI,CAACC,MAAL,EAAa;mBACFN,OAAOQ,YAAP,CAAoBC,OAApB,CAA4BrB,MAAMiB,IAAlC,CAAT;gBACMK,GAAN,CAAUtB,MAAMiB,IAAhB,EAAsBC,MAAtB;;eAEKA,OAAOH,MAAP,EAAeJ,OAAf,IAA0BM,IAAjC;;cAEMjB,MAAMO,MAAd;;;WAGKG,OAAOa,OAAP,GAAiBN,IAAjB,IAAyB,GAAhC;GAzBF;;;AA6BFL,OAAOH,YAAP,GAAsBA,YAAtB,CAEA;;;;"}