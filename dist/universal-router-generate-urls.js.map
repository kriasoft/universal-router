{"version":3,"file":"universal-router-generate-urls.js","sources":["src/generateUrls.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\n\nconst cache = new Map()\n\nfunction cacheRoutes(routesByName, route, routes) {\n  if (routesByName.has(route.name)) {\n    throw new Error(`Route \"${route.name}\" already exists`)\n  }\n\n  if (route.name) {\n    routesByName.set(route.name, route)\n  }\n\n  if (routes) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i]\n      childRoute.parent = route\n      cacheRoutes(routesByName, childRoute, childRoute.children)\n    }\n  }\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!router) {\n    throw new ReferenceError('Router is not defined')\n  }\n\n  router.routesByName = router.routesByName || new Map()\n\n  return (routeName, params) => {\n    let route = router.routesByName.get(routeName)\n    if (!route) {\n      router.routesByName.clear() // clear cache\n      cacheRoutes(router.routesByName, router.root, router.root.children)\n\n      route = router.routesByName.get(routeName)\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`)\n      }\n    }\n\n    let regexp = cache.get(route.fullPath)\n    if (!regexp) {\n      let fullPath = ''\n      let rt = route\n      while (rt) {\n        const path = Array.isArray(rt.path) ? rt.path[0] : rt.path\n        if (path) {\n          fullPath = path + fullPath\n        }\n        rt = rt.parent\n      }\n      const tokens = pathToRegexp.parse(fullPath)\n      const toPath = pathToRegexp.tokensToFunction(tokens)\n      const keys = Object.create(null)\n      for (let i = 0; i < tokens.length; i++) {\n        if (typeof tokens[i] !== 'string') {\n          keys[tokens[i].name] = true\n        }\n      }\n      regexp = { toPath, keys }\n      cache.set(fullPath, regexp)\n      route.fullPath = fullPath\n    }\n\n    let url = router.baseUrl + regexp.toPath(params, options) || '/'\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {}\n      const keys = Object.keys(params)\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key]\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams)\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`\n      }\n    }\n\n    return url\n  }\n}\n\nexport default generateUrls\n"],"names":["cache","Map","cacheRoutes","routesByName","route","routes","has","name","Error","set","i","length","childRoute","parent","children","generateUrls","router","options","ReferenceError","routeName","params","get","clear","root","regexp","fullPath","rt","path","Array","isArray","tokens","pathToRegexp","parse","toPath","tokensToFunction","keys","Object","create","url","baseUrl","stringifyQueryParams","queryParams","key","query","charAt"],"mappings":"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"}