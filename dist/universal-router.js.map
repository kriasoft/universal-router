{"version":3,"file":"universal-router.js","sources":["../node_modules/path-to-regexp/index.js","src/matchPath.js","src/matchRoute.js","src/UniversalRouter.js"],"sourcesContent":["/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n  var isEndDelimited = tokens.length === 0\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\n\nconst { hasOwnProperty } = Object.prototype\nconst cache = new Map()\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val)\n  } catch (err) {\n    return val\n  }\n}\n\nfunction matchPath(route, pathname, parentKeys, parentParams) {\n  const end = !route.children\n  const cacheKey = `${route.path || ''}|${end}`\n  let regexp = cache.get(cacheKey)\n\n  if (!regexp) {\n    const keys = []\n    regexp = {\n      keys,\n      pattern: pathToRegexp(route.path || '', keys, { end }),\n    }\n    cache.set(cacheKey, regexp)\n  }\n\n  const m = regexp.pattern.exec(pathname)\n  if (!m) {\n    return null\n  }\n\n  const path = m[0]\n  const params = { ...parentParams }\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1]\n    const prop = key.name\n    const value = m[i]\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : []\n      } else {\n        params[prop] = value ? decodeParam(value) : value\n      }\n    }\n  }\n\n  return {\n    path: !end && path.charAt(path.length - 1) === '/' ? path.substr(1) : path,\n    keys: parentKeys.concat(regexp.keys),\n    params,\n  }\n}\n\nexport default matchPath\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchPath from './matchPath'\n\nfunction matchRoute(route, baseUrl, pathname, parentKeys, parentParams) {\n  let match\n  let childMatches\n  let childIndex = 0\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return { done: true }\n      }\n\n      if (!match) {\n        match = matchPath(route, pathname, parentKeys, parentParams)\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              baseUrl,\n              path: match.path,\n              keys: match.keys,\n              params: match.params,\n            },\n          }\n        }\n      }\n\n      if (match && route.children) {\n        while (childIndex < route.children.length) {\n          if (!childMatches) {\n            const childRoute = route.children[childIndex]\n            childRoute.parent = route\n\n            childMatches = matchRoute(\n              childRoute,\n              baseUrl + match.path,\n              pathname.substr(match.path.length),\n              match.keys,\n              match.params,\n            )\n          }\n\n          const childMatch = childMatches.next(routeToSkip)\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            }\n          }\n\n          childMatches = null\n          childIndex++\n        }\n      }\n\n      return { done: true }\n    },\n  }\n}\n\nexport default matchRoute\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\nimport matchRoute from './matchRoute'\n\nfunction resolveRoute(context, params) {\n  if (typeof context.route.action === 'function') {\n    return context.route.action(context, params)\n  }\n  return undefined\n}\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute\n  while (route) {\n    route = route.parent\n    if (route === parentRoute) {\n      return true\n    }\n  }\n  return false\n}\n\nclass UniversalRouter {\n  constructor(routes, options = {}) {\n    if (!routes || typeof routes !== 'object') {\n      throw new TypeError('Invalid routes')\n    }\n\n    this.baseUrl = options.baseUrl || ''\n    this.errorHandler = options.errorHandler\n    this.resolveRoute = options.resolveRoute || resolveRoute\n    this.context = { router: this, ...options.context }\n    this.root = Array.isArray(routes) ? { path: '', children: routes, parent: null } : routes\n    this.root.parent = null\n  }\n\n  resolve(pathnameOrContext) {\n    const context = {\n      ...this.context,\n      ...(typeof pathnameOrContext === 'string'\n        ? { pathname: pathnameOrContext }\n        : pathnameOrContext),\n    }\n    const match = matchRoute(\n      this.root,\n      this.baseUrl,\n      context.pathname.substr(this.baseUrl.length),\n      [],\n      null,\n    )\n    const resolve = this.resolveRoute\n    let matches = null\n    let nextMatches = null\n    let currentContext = context\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route\n      matches = nextMatches || match.next(routeToSkip)\n      nextMatches = null\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches\n          return Promise.resolve(null)\n        }\n      }\n\n      if (matches.done) {\n        const error = new Error('Route not found')\n        error.status = 404\n        return Promise.reject(error)\n      }\n\n      currentContext = { ...context, ...matches.value }\n\n      return Promise.resolve(resolve(currentContext, matches.value.params)).then((result) => {\n        if (result !== null && result !== undefined) {\n          return result\n        }\n        return next(resume, parent, result)\n      })\n    }\n\n    context.next = next\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        if (this.errorHandler) {\n          return this.errorHandler(error, currentContext)\n        }\n        throw error\n      })\n  }\n}\n\nUniversalRouter.pathToRegexp = pathToRegexp\n\nexport default UniversalRouter\n"],"names":["pathToRegexp","parse","compile","tokensToFunction","tokensToRegExp","DEFAULT_DELIMITER","DEFAULT_DELIMITERS","PATH_REGEXP","RegExp","join","str","options","tokens","key","index","path","defaultDelimiter","delimiter","delimiters","pathEscaped","res","exec","m","escaped","offset","slice","length","prev","next","name","capture","group","modifier","k","indexOf","push","partial","undefined","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","matches","Array","i","data","encode","encodeURIComponent","token","value","segment","isArray","TypeError","j","test","String","replace","flags","sensitive","regexpToRegexp","keys","groups","source","match","arrayToRegexp","parts","stringToRegexp","strict","start","end","endsWith","concat","map","route","isEndDelimited","hasOwnProperty","Object","prototype","cache","Map","decodeParam","val","decodeURIComponent","err","matchPath","pathname","parentKeys","parentParams","children","cacheKey","regexp","get","set","params","prop","call","split","charAt","matchRoute","baseUrl","childMatches","childIndex","routeToSkip","done","childRoute","parent","childMatch","resolveRoute","context","action","isChildRoute","parentRoute","UniversalRouter","routes","errorHandler","router","root","resolve","pathnameOrContext","nextMatches","currentContext","resume","prevResult","Promise","error","Error","status","reject","then","result","catch"],"mappings":";;;;;;;;EAGA,kBAAc,GAAGA,YAAjB;EACA,WAAoB,GAAGC,KAAvB;EACA,aAAsB,GAAGC,OAAzB;EACA,sBAA+B,GAAGC,gBAAlC;EACA,oBAA6B,GAAGC,cAAhC;EAKA,IAAIC,iBAAiB,GAAG,GAAxB;EACA,IAAIC,kBAAkB,GAAG,IAAzB;EAOA,IAAIC,WAAW,GAAG,IAAIC,MAAJ,CAAW,CAG3B,SAH2B,EAS3B,qFAT2B,EAU3BC,IAV2B,CAUtB,GAVsB,CAAX,EAUL,GAVK,CAAlB;;EAmBA,SAASR,KAAT,CAAgBS,GAAhB,EAAqBC,OAArB,EAA8B;EAC5B,MAAIC,MAAM,GAAG,EAAb;EACA,MAAIC,GAAG,GAAG,CAAV;EACA,MAAIC,KAAK,GAAG,CAAZ;EACA,MAAIC,IAAI,GAAG,EAAX;EACA,MAAIC,gBAAgB,GAAIL,OAAO,IAAIA,OAAO,CAACM,SAApB,IAAkCZ,iBAAzD;EACA,MAAIa,UAAU,GAAIP,OAAO,IAAIA,OAAO,CAACO,UAApB,IAAmCZ,kBAApD;EACA,MAAIa,WAAW,GAAG,KAAlB;EACA,MAAIC,GAAJ;;EAEA,SAAO,CAACA,GAAG,GAAGb,WAAW,CAACc,IAAZ,CAAiBX,GAAjB,CAAP,MAAkC,IAAzC,EAA+C;EAC7C,QAAIY,CAAC,GAAGF,GAAG,CAAC,CAAD,CAAX;EACA,QAAIG,OAAO,GAAGH,GAAG,CAAC,CAAD,CAAjB;EACA,QAAII,MAAM,GAAGJ,GAAG,CAACN,KAAjB;EACAC,IAAAA,IAAI,IAAIL,GAAG,CAACe,KAAJ,CAAUX,KAAV,EAAiBU,MAAjB,CAAR;EACAV,IAAAA,KAAK,GAAGU,MAAM,GAAGF,CAAC,CAACI,MAAnB;;EAGA,QAAIH,OAAJ,EAAa;EACXR,MAAAA,IAAI,IAAIQ,OAAO,CAAC,CAAD,CAAf;EACAJ,MAAAA,WAAW,GAAG,IAAd;EACA;EACD;;EAED,QAAIQ,IAAI,GAAG,EAAX;EACA,QAAIC,IAAI,GAAGlB,GAAG,CAACI,KAAD,CAAd;EACA,QAAIe,IAAI,GAAGT,GAAG,CAAC,CAAD,CAAd;EACA,QAAIU,OAAO,GAAGV,GAAG,CAAC,CAAD,CAAjB;EACA,QAAIW,KAAK,GAAGX,GAAG,CAAC,CAAD,CAAf;EACA,QAAIY,QAAQ,GAAGZ,GAAG,CAAC,CAAD,CAAlB;;EAEA,QAAI,CAACD,WAAD,IAAgBJ,IAAI,CAACW,MAAzB,EAAiC;EAC/B,UAAIO,CAAC,GAAGlB,IAAI,CAACW,MAAL,GAAc,CAAtB;;EAEA,UAAIR,UAAU,CAACgB,OAAX,CAAmBnB,IAAI,CAACkB,CAAD,CAAvB,IAA8B,CAAC,CAAnC,EAAsC;EACpCN,QAAAA,IAAI,GAAGZ,IAAI,CAACkB,CAAD,CAAX;EACAlB,QAAAA,IAAI,GAAGA,IAAI,CAACU,KAAL,CAAW,CAAX,EAAcQ,CAAd,CAAP;EACD;EACF;;EAGD,QAAIlB,IAAJ,EAAU;EACRH,MAAAA,MAAM,CAACuB,IAAP,CAAYpB,IAAZ;EACAA,MAAAA,IAAI,GAAG,EAAP;EACAI,MAAAA,WAAW,GAAG,KAAd;EACD;;EAED,QAAIiB,OAAO,GAAGT,IAAI,KAAK,EAAT,IAAeC,IAAI,KAAKS,SAAxB,IAAqCT,IAAI,KAAKD,IAA5D;EACA,QAAIW,MAAM,GAAGN,QAAQ,KAAK,GAAb,IAAoBA,QAAQ,KAAK,GAA9C;EACA,QAAIO,QAAQ,GAAGP,QAAQ,KAAK,GAAb,IAAoBA,QAAQ,KAAK,GAAhD;EACA,QAAIf,SAAS,GAAGU,IAAI,IAAIX,gBAAxB;EACA,QAAIwB,OAAO,GAAGV,OAAO,IAAIC,KAAzB;EAEAnB,IAAAA,MAAM,CAACuB,IAAP,CAAY;EACVN,MAAAA,IAAI,EAAEA,IAAI,IAAIhB,GAAG,EADP;EAEV4B,MAAAA,MAAM,EAAEd,IAFE;EAGVV,MAAAA,SAAS,EAAEA,SAHD;EAIVsB,MAAAA,QAAQ,EAAEA,QAJA;EAKVD,MAAAA,MAAM,EAAEA,MALE;EAMVF,MAAAA,OAAO,EAAEA,OANC;EAOVI,MAAAA,OAAO,EAAEA,OAAO,GAAGE,WAAW,CAACF,OAAD,CAAd,GAA0B,OAAOG,YAAY,CAAC1B,SAAD,CAAnB,GAAiC;EAPjE,KAAZ;EASD;;EAGD,MAAIF,IAAI,IAAID,KAAK,GAAGJ,GAAG,CAACgB,MAAxB,EAAgC;EAC9Bd,IAAAA,MAAM,CAACuB,IAAP,CAAYpB,IAAI,GAAGL,GAAG,CAACkC,MAAJ,CAAW9B,KAAX,CAAnB;EACD;;EAED,SAAOF,MAAP;EACD;;EASD,SAASV,OAAT,CAAkBQ,GAAlB,EAAuBC,OAAvB,EAAgC;EAC9B,SAAOR,gBAAgB,CAACF,KAAK,CAACS,GAAD,EAAMC,OAAN,CAAN,CAAvB;EACD;;EAKD,SAASR,gBAAT,CAA2BS,MAA3B,EAAmC;EAEjC,MAAIiC,OAAO,GAAG,IAAIC,KAAJ,CAAUlC,MAAM,CAACc,MAAjB,CAAd;;EAGA,OAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,MAAM,CAACc,MAA3B,EAAmCqB,CAAC,EAApC,EAAwC;EACtC,QAAI,OAAOnC,MAAM,CAACmC,CAAD,CAAb,KAAqB,QAAzB,EAAmC;EACjCF,MAAAA,OAAO,CAACE,CAAD,CAAP,GAAa,IAAIvC,MAAJ,CAAW,SAASI,MAAM,CAACmC,CAAD,CAAN,CAAUP,OAAnB,GAA6B,IAAxC,CAAb;EACD;EACF;;EAED,SAAO,UAAUQ,IAAV,EAAgBrC,OAAhB,EAAyB;EAC9B,QAAII,IAAI,GAAG,EAAX;EACA,QAAIkC,MAAM,GAAItC,OAAO,IAAIA,OAAO,CAACsC,MAApB,IAA+BC,kBAA5C;;EAEA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,MAAM,CAACc,MAA3B,EAAmCqB,CAAC,EAApC,EAAwC;EACtC,UAAII,KAAK,GAAGvC,MAAM,CAACmC,CAAD,CAAlB;;EAEA,UAAI,OAAOI,KAAP,KAAiB,QAArB,EAA+B;EAC7BpC,QAAAA,IAAI,IAAIoC,KAAR;EACA;EACD;;EAED,UAAIC,KAAK,GAAGJ,IAAI,GAAGA,IAAI,CAACG,KAAK,CAACtB,IAAP,CAAP,GAAsBQ,SAAtC;EACA,UAAIgB,OAAJ;;EAEA,UAAIP,KAAK,CAACQ,OAAN,CAAcF,KAAd,CAAJ,EAA0B;EACxB,YAAI,CAACD,KAAK,CAACb,MAAX,EAAmB;EACjB,gBAAM,IAAIiB,SAAJ,CAAc,eAAeJ,KAAK,CAACtB,IAArB,GAA4B,gCAA1C,CAAN;EACD;;EAED,YAAIuB,KAAK,CAAC1B,MAAN,KAAiB,CAArB,EAAwB;EACtB,cAAIyB,KAAK,CAACZ,QAAV,EAAoB;EAEpB,gBAAM,IAAIgB,SAAJ,CAAc,eAAeJ,KAAK,CAACtB,IAArB,GAA4B,mBAA1C,CAAN;EACD;;EAED,aAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAAC1B,MAA1B,EAAkC8B,CAAC,EAAnC,EAAuC;EACrCH,UAAAA,OAAO,GAAGJ,MAAM,CAACG,KAAK,CAACI,CAAD,CAAN,EAAWL,KAAX,CAAhB;;EAEA,cAAI,CAACN,OAAO,CAACE,CAAD,CAAP,CAAWU,IAAX,CAAgBJ,OAAhB,CAAL,EAA+B;EAC7B,kBAAM,IAAIE,SAAJ,CAAc,mBAAmBJ,KAAK,CAACtB,IAAzB,GAAgC,cAAhC,GAAiDsB,KAAK,CAACX,OAAvD,GAAiE,GAA/E,CAAN;EACD;;EAEDzB,UAAAA,IAAI,IAAI,CAACyC,CAAC,KAAK,CAAN,GAAUL,KAAK,CAACV,MAAhB,GAAyBU,KAAK,CAAClC,SAAhC,IAA6CoC,OAArD;EACD;;EAED;EACD;;EAED,UAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA9C,IAA0D,OAAOA,KAAP,KAAiB,SAA/E,EAA0F;EACxFC,QAAAA,OAAO,GAAGJ,MAAM,CAACS,MAAM,CAACN,KAAD,CAAP,EAAgBD,KAAhB,CAAhB;;EAEA,YAAI,CAACN,OAAO,CAACE,CAAD,CAAP,CAAWU,IAAX,CAAgBJ,OAAhB,CAAL,EAA+B;EAC7B,gBAAM,IAAIE,SAAJ,CAAc,eAAeJ,KAAK,CAACtB,IAArB,GAA4B,cAA5B,GAA6CsB,KAAK,CAACX,OAAnD,GAA6D,cAA7D,GAA8Ea,OAA9E,GAAwF,GAAtG,CAAN;EACD;;EAEDtC,QAAAA,IAAI,IAAIoC,KAAK,CAACV,MAAN,GAAeY,OAAvB;EACA;EACD;;EAED,UAAIF,KAAK,CAACZ,QAAV,EAAoB;EAElB,YAAIY,KAAK,CAACf,OAAV,EAAmBrB,IAAI,IAAIoC,KAAK,CAACV,MAAd;EAEnB;EACD;;EAED,YAAM,IAAIc,SAAJ,CAAc,eAAeJ,KAAK,CAACtB,IAArB,GAA4B,UAA5B,IAA0CsB,KAAK,CAACb,MAAN,GAAe,UAAf,GAA4B,UAAtE,CAAd,CAAN;EACD;;EAED,WAAOvB,IAAP;EACD,GA7DD;EA8DD;;EAQD,SAAS4B,YAAT,CAAuBjC,GAAvB,EAA4B;EAC1B,SAAOA,GAAG,CAACiD,OAAJ,CAAY,2BAAZ,EAAyC,MAAzC,CAAP;EACD;;EAQD,SAASjB,WAAT,CAAsBX,KAAtB,EAA6B;EAC3B,SAAOA,KAAK,CAAC4B,OAAN,CAAc,cAAd,EAA8B,MAA9B,CAAP;EACD;;EAQD,SAASC,KAAT,CAAgBjD,OAAhB,EAAyB;EACvB,SAAOA,OAAO,IAAIA,OAAO,CAACkD,SAAnB,GAA+B,EAA/B,GAAoC,GAA3C;EACD;;EASD,SAASC,cAAT,CAAyB/C,IAAzB,EAA+BgD,IAA/B,EAAqC;EACnC,MAAI,CAACA,IAAL,EAAW,OAAOhD,IAAP;EAGX,MAAIiD,MAAM,GAAGjD,IAAI,CAACkD,MAAL,CAAYC,KAAZ,CAAkB,WAAlB,CAAb;;EAEA,MAAIF,MAAJ,EAAY;EACV,SAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiB,MAAM,CAACtC,MAA3B,EAAmCqB,CAAC,EAApC,EAAwC;EACtCgB,MAAAA,IAAI,CAAC5B,IAAL,CAAU;EACRN,QAAAA,IAAI,EAAEkB,CADE;EAERN,QAAAA,MAAM,EAAE,IAFA;EAGRxB,QAAAA,SAAS,EAAE,IAHH;EAIRsB,QAAAA,QAAQ,EAAE,KAJF;EAKRD,QAAAA,MAAM,EAAE,KALA;EAMRF,QAAAA,OAAO,EAAE,KAND;EAORI,QAAAA,OAAO,EAAE;EAPD,OAAV;EASD;EACF;;EAED,SAAOzB,IAAP;EACD;;EAUD,SAASoD,aAAT,CAAwBpD,IAAxB,EAA8BgD,IAA9B,EAAoCpD,OAApC,EAA6C;EAC3C,MAAIyD,KAAK,GAAG,EAAZ;;EAEA,OAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,IAAI,CAACW,MAAzB,EAAiCqB,CAAC,EAAlC,EAAsC;EACpCqB,IAAAA,KAAK,CAACjC,IAAN,CAAWnC,YAAY,CAACe,IAAI,CAACgC,CAAD,CAAL,EAAUgB,IAAV,EAAgBpD,OAAhB,CAAZ,CAAqCsD,MAAhD;EACD;;EAED,SAAO,IAAIzD,MAAJ,CAAW,QAAQ4D,KAAK,CAAC3D,IAAN,CAAW,GAAX,CAAR,GAA0B,GAArC,EAA0CmD,KAAK,CAACjD,OAAD,CAA/C,CAAP;EACD;;EAUD,SAAS0D,cAAT,CAAyBtD,IAAzB,EAA+BgD,IAA/B,EAAqCpD,OAArC,EAA8C;EAC5C,SAAOP,cAAc,CAACH,KAAK,CAACc,IAAD,EAAOJ,OAAP,CAAN,EAAuBoD,IAAvB,EAA6BpD,OAA7B,CAArB;EACD;;EAUD,SAASP,cAAT,CAAyBQ,MAAzB,EAAiCmD,IAAjC,EAAuCpD,OAAvC,EAAgD;EAC9CA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;EAEA,MAAI2D,MAAM,GAAG3D,OAAO,CAAC2D,MAArB;EACA,MAAIC,KAAK,GAAG5D,OAAO,CAAC4D,KAAR,KAAkB,KAA9B;EACA,MAAIC,GAAG,GAAG7D,OAAO,CAAC6D,GAAR,KAAgB,KAA1B;EACA,MAAIvD,SAAS,GAAG0B,YAAY,CAAChC,OAAO,CAACM,SAAR,IAAqBZ,iBAAtB,CAA5B;EACA,MAAIa,UAAU,GAAGP,OAAO,CAACO,UAAR,IAAsBZ,kBAAvC;EACA,MAAImE,QAAQ,GAAG,GAAGC,MAAH,CAAU/D,OAAO,CAAC8D,QAAR,IAAoB,EAA9B,EAAkCE,GAAlC,CAAsChC,YAAtC,EAAoD+B,MAApD,CAA2D,GAA3D,EAAgEjE,IAAhE,CAAqE,GAArE,CAAf;EACA,MAAImE,KAAK,GAAGL,KAAK,GAAG,GAAH,GAAS,EAA1B;EACA,MAAIM,cAAc,GAAGjE,MAAM,CAACc,MAAP,KAAkB,CAAvC;;EAGA,OAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,MAAM,CAACc,MAA3B,EAAmCqB,CAAC,EAApC,EAAwC;EACtC,QAAII,KAAK,GAAGvC,MAAM,CAACmC,CAAD,CAAlB;;EAEA,QAAI,OAAOI,KAAP,KAAiB,QAArB,EAA+B;EAC7ByB,MAAAA,KAAK,IAAIjC,YAAY,CAACQ,KAAD,CAArB;EACA0B,MAAAA,cAAc,GAAG9B,CAAC,KAAKnC,MAAM,CAACc,MAAP,GAAgB,CAAtB,IAA2BR,UAAU,CAACgB,OAAX,CAAmBiB,KAAK,CAACA,KAAK,CAACzB,MAAN,GAAe,CAAhB,CAAxB,IAA8C,CAAC,CAA3F;EACD,KAHD,MAGO;EACL,UAAII,OAAO,GAAGqB,KAAK,CAACb,MAAN,GACV,QAAQa,KAAK,CAACX,OAAd,GAAwB,MAAxB,GAAiCG,YAAY,CAACQ,KAAK,CAAClC,SAAP,CAA7C,GAAiE,KAAjE,GAAyEkC,KAAK,CAACX,OAA/E,GAAyF,KAD/E,GAEVW,KAAK,CAACX,OAFV;EAIA,UAAIuB,IAAJ,EAAUA,IAAI,CAAC5B,IAAL,CAAUgB,KAAV;;EAEV,UAAIA,KAAK,CAACZ,QAAV,EAAoB;EAClB,YAAIY,KAAK,CAACf,OAAV,EAAmB;EACjBwC,UAAAA,KAAK,IAAIjC,YAAY,CAACQ,KAAK,CAACV,MAAP,CAAZ,GAA6B,GAA7B,GAAmCX,OAAnC,GAA6C,IAAtD;EACD,SAFD,MAEO;EACL8C,UAAAA,KAAK,IAAI,QAAQjC,YAAY,CAACQ,KAAK,CAACV,MAAP,CAApB,GAAqC,GAArC,GAA2CX,OAA3C,GAAqD,KAA9D;EACD;EACF,OAND,MAMO;EACL8C,QAAAA,KAAK,IAAIjC,YAAY,CAACQ,KAAK,CAACV,MAAP,CAAZ,GAA6B,GAA7B,GAAmCX,OAAnC,GAA6C,GAAtD;EACD;EACF;EACF;;EAED,MAAI0C,GAAJ,EAAS;EACP,QAAI,CAACF,MAAL,EAAaM,KAAK,IAAI,QAAQ3D,SAAR,GAAoB,IAA7B;EAEb2D,IAAAA,KAAK,IAAIH,QAAQ,KAAK,GAAb,GAAmB,GAAnB,GAAyB,QAAQA,QAAR,GAAmB,GAArD;EACD,GAJD,MAIO;EACL,QAAI,CAACH,MAAL,EAAaM,KAAK,IAAI,QAAQ3D,SAAR,GAAoB,KAApB,GAA4BwD,QAA5B,GAAuC,KAAhD;EACb,QAAI,CAACI,cAAL,EAAqBD,KAAK,IAAI,QAAQ3D,SAAR,GAAoB,GAApB,GAA0BwD,QAA1B,GAAqC,GAA9C;EACtB;;EAED,SAAO,IAAIjE,MAAJ,CAAWoE,KAAX,EAAkBhB,KAAK,CAACjD,OAAD,CAAvB,CAAP;EACD;;EAcD,SAASX,YAAT,CAAuBe,IAAvB,EAA6BgD,IAA7B,EAAmCpD,OAAnC,EAA4C;EAC1C,MAAII,IAAI,YAAYP,MAApB,EAA4B;EAC1B,WAAOsD,cAAc,CAAC/C,IAAD,EAAOgD,IAAP,CAArB;EACD;;EAED,MAAIjB,KAAK,CAACQ,OAAN,CAAcvC,IAAd,CAAJ,EAAyB;EACvB,WAAOoD,aAAa,CAAwBpD,IAAxB,EAA+BgD,IAA/B,EAAqCpD,OAArC,CAApB;EACD;;EAED,SAAO0D,cAAc,CAAwBtD,IAAxB,EAA+BgD,IAA/B,EAAqCpD,OAArC,CAArB;EACD;;;;;;MCvWOmE,iBAAmBC,MAAM,CAACC,UAA1BF;EACR,IAAMG,KAAK,GAAG,IAAIC,GAAJ,EAAd;;EAEA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;EACxB,MAAI;EACF,WAAOC,kBAAkB,CAACD,GAAD,CAAzB;EACD,GAFD,CAEE,OAAOE,GAAP,EAAY;EACZ,WAAOF,GAAP;EACD;EACF;;EAED,SAASG,SAAT,CAAmBX,KAAnB,EAA0BY,QAA1B,EAAoCC,UAApC,EAAgDC,YAAhD,EAA8D;EAC5D,MAAMlB,GAAG,GAAG,CAACI,KAAK,CAACe,QAAnB;EACA,MAAMC,QAAQ,IAAMhB,KAAK,CAAC7D,IAAN,IAAc,EAApB,UAA0ByD,GAAxC;EACA,MAAIqB,MAAM,GAAGZ,KAAK,CAACa,GAAN,CAAUF,QAAV,CAAb;;EAEA,MAAI,CAACC,MAAL,EAAa;EACX,QAAM9B,IAAI,GAAG,EAAb;EACA8B,IAAAA,MAAM,GAAG;EACP9B,MAAAA,IAAI,EAAJA,IADO;EAEPvB,MAAAA,OAAO,EAAExC,cAAY,CAAC4E,KAAK,CAAC7D,IAAN,IAAc,EAAf,EAAmBgD,IAAnB,EAAyB;EAAES,QAAAA,GAAG,EAAHA;EAAF,OAAzB;EAFd,KAAT;EAIAS,IAAAA,KAAK,CAACc,GAAN,CAAUH,QAAV,EAAoBC,MAApB;EACD;;EAED,MAAMvE,CAAC,GAAGuE,MAAM,CAACrD,OAAP,CAAenB,IAAf,CAAoBmE,QAApB,CAAV;;EACA,MAAI,CAAClE,CAAL,EAAQ;EACN,WAAO,IAAP;EACD;;EAED,MAAMP,IAAI,GAAGO,CAAC,CAAC,CAAD,CAAd;EACA,MAAM0E,MAAM,qBAAQN,YAAR,CAAZ;;EAEA,OAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,CAAC,CAACI,MAAtB,EAA8BqB,CAAC,EAA/B,EAAmC;EACjC,QAAMlC,GAAG,GAAGgF,MAAM,CAAC9B,IAAP,CAAYhB,CAAC,GAAG,CAAhB,CAAZ;EACA,QAAMkD,IAAI,GAAGpF,GAAG,CAACgB,IAAjB;EACA,QAAMuB,KAAK,GAAG9B,CAAC,CAACyB,CAAD,CAAf;;EACA,QAAIK,KAAK,KAAKf,SAAV,IAAuB,CAACyC,cAAc,CAACoB,IAAf,CAAoBF,MAApB,EAA4BC,IAA5B,CAA5B,EAA+D;EAC7D,UAAIpF,GAAG,CAACyB,MAAR,EAAgB;EACd0D,QAAAA,MAAM,CAACC,IAAD,CAAN,GAAe7C,KAAK,GAAGA,KAAK,CAAC+C,KAAN,CAAYtF,GAAG,CAACI,SAAhB,EAA2B0D,GAA3B,CAA+BQ,WAA/B,CAAH,GAAiD,EAArE;EACD,OAFD,MAEO;EACLa,QAAAA,MAAM,CAACC,IAAD,CAAN,GAAe7C,KAAK,GAAG+B,WAAW,CAAC/B,KAAD,CAAd,GAAwBA,KAA5C;EACD;EACF;EACF;;EAED,SAAO;EACLrC,IAAAA,IAAI,EAAE,CAACyD,GAAD,IAAQzD,IAAI,CAACqF,MAAL,CAAYrF,IAAI,CAACW,MAAL,GAAc,CAA1B,MAAiC,GAAzC,GAA+CX,IAAI,CAAC6B,MAAL,CAAY,CAAZ,CAA/C,GAAgE7B,IADjE;EAELgD,IAAAA,IAAI,EAAE0B,UAAU,CAACf,MAAX,CAAkBmB,MAAM,CAAC9B,IAAzB,CAFD;EAGLiC,IAAAA,MAAM,EAANA;EAHK,GAAP;EAKD;;ECnDD,SAASK,UAAT,CAAoBzB,KAApB,EAA2B0B,OAA3B,EAAoCd,QAApC,EAA8CC,UAA9C,EAA0DC,YAA1D,EAAwE;EACtE,MAAIxB,KAAJ;EACA,MAAIqC,YAAJ;EACA,MAAIC,UAAU,GAAG,CAAjB;EAEA,SAAO;EACL5E,IAAAA,IADK,gBACA6E,WADA,EACa;EAChB,UAAI7B,KAAK,KAAK6B,WAAd,EAA2B;EACzB,eAAO;EAAEC,UAAAA,IAAI,EAAE;EAAR,SAAP;EACD;;EAED,UAAI,CAACxC,KAAL,EAAY;EACVA,QAAAA,KAAK,GAAGqB,SAAS,CAACX,KAAD,EAAQY,QAAR,EAAkBC,UAAlB,EAA8BC,YAA9B,CAAjB;;EAEA,YAAIxB,KAAJ,EAAW;EACT,iBAAO;EACLwC,YAAAA,IAAI,EAAE,KADD;EAELtD,YAAAA,KAAK,EAAE;EACLwB,cAAAA,KAAK,EAALA,KADK;EAEL0B,cAAAA,OAAO,EAAPA,OAFK;EAGLvF,cAAAA,IAAI,EAAEmD,KAAK,CAACnD,IAHP;EAILgD,cAAAA,IAAI,EAAEG,KAAK,CAACH,IAJP;EAKLiC,cAAAA,MAAM,EAAE9B,KAAK,CAAC8B;EALT;EAFF,WAAP;EAUD;EACF;;EAED,UAAI9B,KAAK,IAAIU,KAAK,CAACe,QAAnB,EAA6B;EAC3B,eAAOa,UAAU,GAAG5B,KAAK,CAACe,QAAN,CAAejE,MAAnC,EAA2C;EACzC,cAAI,CAAC6E,YAAL,EAAmB;EACjB,gBAAMI,UAAU,GAAG/B,KAAK,CAACe,QAAN,CAAea,UAAf,CAAnB;EACAG,YAAAA,UAAU,CAACC,MAAX,GAAoBhC,KAApB;EAEA2B,YAAAA,YAAY,GAAGF,UAAU,CACvBM,UADuB,EAEvBL,OAAO,GAAGpC,KAAK,CAACnD,IAFO,EAGvByE,QAAQ,CAAC5C,MAAT,CAAgBsB,KAAK,CAACnD,IAAN,CAAWW,MAA3B,CAHuB,EAIvBwC,KAAK,CAACH,IAJiB,EAKvBG,KAAK,CAAC8B,MALiB,CAAzB;EAOD;;EAED,cAAMa,UAAU,GAAGN,YAAY,CAAC3E,IAAb,CAAkB6E,WAAlB,CAAnB;;EACA,cAAI,CAACI,UAAU,CAACH,IAAhB,EAAsB;EACpB,mBAAO;EACLA,cAAAA,IAAI,EAAE,KADD;EAELtD,cAAAA,KAAK,EAAEyD,UAAU,CAACzD;EAFb,aAAP;EAID;;EAEDmD,UAAAA,YAAY,GAAG,IAAf;EACAC,UAAAA,UAAU;EACX;EACF;;EAED,aAAO;EAAEE,QAAAA,IAAI,EAAE;EAAR,OAAP;EACD;EApDI,GAAP;EAsDD;;EC1DD,SAASI,YAAT,CAAsBC,OAAtB,EAA+Bf,MAA/B,EAAuC;EACrC,MAAI,OAAOe,OAAO,CAACnC,KAAR,CAAcoC,MAArB,KAAgC,UAApC,EAAgD;EAC9C,WAAOD,OAAO,CAACnC,KAAR,CAAcoC,MAAd,CAAqBD,OAArB,EAA8Bf,MAA9B,CAAP;EACD;;EACD,SAAO3D,SAAP;EACD;;EAED,SAAS4E,YAAT,CAAsBC,WAAtB,EAAmCP,UAAnC,EAA+C;EAC7C,MAAI/B,KAAK,GAAG+B,UAAZ;;EACA,SAAO/B,KAAP,EAAc;EACZA,IAAAA,KAAK,GAAGA,KAAK,CAACgC,MAAd;;EACA,QAAIhC,KAAK,KAAKsC,WAAd,EAA2B;EACzB,aAAO,IAAP;EACD;EACF;;EACD,SAAO,KAAP;EACD;;MAEKC;EACJ,2BAAYC,MAAZ,EAAoBzG,OAApB,EAAkC;EAAA,QAAdA,OAAc;EAAdA,MAAAA,OAAc,GAAJ,EAAI;EAAA;;EAChC,QAAI,CAACyG,MAAD,IAAW,OAAOA,MAAP,KAAkB,QAAjC,EAA2C;EACzC,YAAM,IAAI7D,SAAJ,CAAc,gBAAd,CAAN;EACD;;EAED,SAAK+C,OAAL,GAAe3F,OAAO,CAAC2F,OAAR,IAAmB,EAAlC;EACA,SAAKe,YAAL,GAAoB1G,OAAO,CAAC0G,YAA5B;EACA,SAAKP,YAAL,GAAoBnG,OAAO,CAACmG,YAAR,IAAwBA,YAA5C;EACA,SAAKC,OAAL;EAAiBO,MAAAA,MAAM,EAAE;EAAzB,OAAkC3G,OAAO,CAACoG,OAA1C;EACA,SAAKQ,IAAL,GAAYzE,KAAK,CAACQ,OAAN,CAAc8D,MAAd,IAAwB;EAAErG,MAAAA,IAAI,EAAE,EAAR;EAAY4E,MAAAA,QAAQ,EAAEyB,MAAtB;EAA8BR,MAAAA,MAAM,EAAE;EAAtC,KAAxB,GAAuEQ,MAAnF;EACA,SAAKG,IAAL,CAAUX,MAAV,GAAmB,IAAnB;EACD;;;;WAEDY,UAAA,iBAAQC,iBAAR,EAA2B;EAAA;;EACzB,QAAMV,OAAO,qBACR,KAAKA,OADG,EAEP,OAAOU,iBAAP,KAA6B,QAA7B,GACA;EAAEjC,MAAAA,QAAQ,EAAEiC;EAAZ,KADA,GAEAA,iBAJO,CAAb;EAMA,QAAMvD,KAAK,GAAGmC,UAAU,CACtB,KAAKkB,IADiB,EAEtB,KAAKjB,OAFiB,EAGtBS,OAAO,CAACvB,QAAR,CAAiB5C,MAAjB,CAAwB,KAAK0D,OAAL,CAAa5E,MAArC,CAHsB,EAItB,EAJsB,EAKtB,IALsB,CAAxB;EAOA,QAAM8F,OAAO,GAAG,KAAKV,YAArB;EACA,QAAIjE,OAAO,GAAG,IAAd;EACA,QAAI6E,WAAW,GAAG,IAAlB;EACA,QAAIC,cAAc,GAAGZ,OAArB;;EAEA,aAASnF,IAAT,CAAcgG,MAAd,EAAsBhB,MAAtB,EAAoDiB,UAApD,EAAgE;EAAA,UAA1CjB,MAA0C;EAA1CA,QAAAA,MAA0C,GAAjC/D,OAAO,CAACO,KAAR,CAAcwB,KAAmB;EAAA;;EAC9D,UAAM6B,WAAW,GAAGoB,UAAU,KAAK,IAAf,IAAuBhF,OAAO,CAACO,KAAR,CAAcwB,KAAzD;EACA/B,MAAAA,OAAO,GAAG6E,WAAW,IAAIxD,KAAK,CAACtC,IAAN,CAAW6E,WAAX,CAAzB;EACAiB,MAAAA,WAAW,GAAG,IAAd;;EAEA,UAAI,CAACE,MAAL,EAAa;EACX,YAAI/E,OAAO,CAAC6D,IAAR,IAAgB,CAACO,YAAY,CAACL,MAAD,EAAS/D,OAAO,CAACO,KAAR,CAAcwB,KAAvB,CAAjC,EAAgE;EAC9D8C,UAAAA,WAAW,GAAG7E,OAAd;EACA,iBAAOiF,OAAO,CAACN,OAAR,CAAgB,IAAhB,CAAP;EACD;EACF;;EAED,UAAI3E,OAAO,CAAC6D,IAAZ,EAAkB;EAChB,YAAMqB,KAAK,GAAG,IAAIC,KAAJ,CAAU,iBAAV,CAAd;EACAD,QAAAA,KAAK,CAACE,MAAN,GAAe,GAAf;EACA,eAAOH,OAAO,CAACI,MAAR,CAAeH,KAAf,CAAP;EACD;;EAEDJ,MAAAA,cAAc,qBAAQZ,OAAR,EAAoBlE,OAAO,CAACO,KAA5B,CAAd;EAEA,aAAO0E,OAAO,CAACN,OAAR,CAAgBA,OAAO,CAACG,cAAD,EAAiB9E,OAAO,CAACO,KAAR,CAAc4C,MAA/B,CAAvB,EAA+DmC,IAA/D,CAAoE,UAACC,MAAD,EAAY;EACrF,YAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK/F,SAAlC,EAA6C;EAC3C,iBAAO+F,MAAP;EACD;;EACD,eAAOxG,IAAI,CAACgG,MAAD,EAAShB,MAAT,EAAiBwB,MAAjB,CAAX;EACD,OALM,CAAP;EAMD;;EAEDrB,IAAAA,OAAO,CAACnF,IAAR,GAAeA,IAAf;EAEA,WAAOkG,OAAO,CAACN,OAAR,GACJW,IADI,CACC;EAAA,aAAMvG,IAAI,CAAC,IAAD,EAAO,KAAI,CAAC2F,IAAZ,CAAV;EAAA,KADD,EAEJc,KAFI,CAEE,UAACN,KAAD,EAAW;EAChB,UAAI,KAAI,CAACV,YAAT,EAAuB;EACrB,eAAO,KAAI,CAACA,YAAL,CAAkBU,KAAlB,EAAyBJ,cAAzB,CAAP;EACD;;EACD,YAAMI,KAAN;EACD,KAPI,CAAP;EAQD;;;;;EAGHZ,eAAe,CAACnH,YAAhB,GAA+BA,cAA/B;;;;;;;;"}