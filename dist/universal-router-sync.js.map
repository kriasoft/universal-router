{"version":3,"file":"universal-router-sync.js","sources":["../node_modules/path-to-regexp/index.js","src/matchPath.js","src/matchRoute.js","src/resolveRoute.js","src/isChildRoute.js","src/UniversalRouterSync.js"],"sourcesContent":["/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var whitelist = (options && options.whitelist) || undefined\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n      var c = path[k]\n      var matches = whitelist ? whitelist.indexOf(c) > -1 : true\n\n      if (matches) {\n        prev = c\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var pattern = capture || group\n    var delimiter = prev || defaultDelimiter\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: pattern\n        ? escapeGroup(pattern)\n        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n    var validate = options ? options.validate !== false : true\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) continue\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = options.delimiter || DEFAULT_DELIMITER\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (!token.prefix) {\n          route += '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + escapeString(delimiter) + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    var endToken = tokens[tokens.length - 1]\n    var isEndDelimited = typeof endToken === 'string'\n      ? endToken[endToken.length - 1] === delimiter\n      : endToken === undefined\n\n    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\n\nconst { hasOwnProperty } = Object.prototype\nconst cache = new Map()\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val)\n  } catch (err) {\n    return val\n  }\n}\n\nfunction matchPath(route, pathname, parentKeys, parentParams) {\n  const end = !route.children\n  const cacheKey = `${route.path || ''}|${end}`\n  let regexp = cache.get(cacheKey)\n\n  if (!regexp) {\n    const keys = []\n    regexp = {\n      keys,\n      pattern: pathToRegexp(route.path || '', keys, { end }),\n    }\n    cache.set(cacheKey, regexp)\n  }\n\n  const m = regexp.pattern.exec(pathname)\n  if (!m) {\n    return null\n  }\n\n  const path = m[0]\n  const params = { ...parentParams }\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1]\n    const prop = key.name\n    const value = m[i]\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : []\n      } else {\n        params[prop] = value ? decodeParam(value) : value\n      }\n    }\n  }\n\n  return {\n    path: !end && path.charAt(path.length - 1) === '/' ? path.substr(1) : path,\n    keys: parentKeys.concat(regexp.keys),\n    params,\n  }\n}\n\nexport default matchPath\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchPath from './matchPath'\n\nfunction matchRoute(route, baseUrl, pathname, parentKeys, parentParams) {\n  let match\n  let childMatches\n  let childIndex = 0\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return { done: true }\n      }\n\n      if (!match) {\n        match = matchPath(route, pathname, parentKeys, parentParams)\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              baseUrl,\n              path: match.path,\n              keys: match.keys,\n              params: match.params,\n            },\n          }\n        }\n      }\n\n      if (match && route.children) {\n        while (childIndex < route.children.length) {\n          if (!childMatches) {\n            const childRoute = route.children[childIndex]\n            childRoute.parent = route\n\n            childMatches = matchRoute(\n              childRoute,\n              baseUrl + match.path,\n              pathname.substr(match.path.length),\n              match.keys,\n              match.params,\n            )\n          }\n\n          const childMatch = childMatches.next(routeToSkip)\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            }\n          }\n\n          childMatches = null\n          childIndex++\n        }\n      }\n\n      return { done: true }\n    },\n  }\n}\n\nexport default matchRoute\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction resolveRoute(context, params) {\n  if (typeof context.route.action === 'function') {\n    return context.route.action(context, params)\n  }\n  return undefined\n}\n\nexport default resolveRoute\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute\n  while (route) {\n    route = route.parent\n    if (route === parentRoute) {\n      return true\n    }\n  }\n  return false\n}\n\nexport default isChildRoute\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\nimport matchRoute from './matchRoute'\nimport resolveRoute from './resolveRoute'\nimport isChildRoute from './isChildRoute'\n\nclass UniversalRouterSync {\n  constructor(routes, options = {}) {\n    if (!routes || typeof routes !== 'object') {\n      throw new TypeError('Invalid routes')\n    }\n\n    this.baseUrl = options.baseUrl || ''\n    this.errorHandler = options.errorHandler\n    this.resolveRoute = options.resolveRoute || resolveRoute\n    this.context = { router: this, ...options.context }\n    this.root = Array.isArray(routes) ? { path: '', children: routes, parent: null } : routes\n    this.root.parent = null\n  }\n\n  resolve(pathnameOrContext) {\n    const context = {\n      ...this.context,\n      ...(typeof pathnameOrContext === 'string'\n        ? { pathname: pathnameOrContext }\n        : pathnameOrContext),\n    }\n    const match = matchRoute(\n      this.root,\n      this.baseUrl,\n      context.pathname.substr(this.baseUrl.length),\n      [],\n      null,\n    )\n    const resolve = this.resolveRoute\n    let matches = null\n    let nextMatches = null\n    let currentContext = context\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && !matches.done && matches.value.route\n      matches = nextMatches || match.next(routeToSkip)\n      nextMatches = null\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches\n          return null\n        }\n      }\n\n      if (matches.done) {\n        const error = new Error('Route not found')\n        error.status = 404\n        throw error\n      }\n\n      currentContext = { ...context, ...matches.value }\n\n      const result = resolve(currentContext, matches.value.params)\n      if (result !== null && result !== undefined) {\n        return result\n      }\n      return next(resume, parent, result)\n    }\n\n    context.next = next\n\n    try {\n      return next(true, this.root)\n    } catch (error) {\n      if (this.errorHandler) {\n        return this.errorHandler(error, currentContext)\n      }\n      throw error\n    }\n  }\n}\n\nUniversalRouterSync.pathToRegexp = pathToRegexp\n\nexport default UniversalRouterSync\n"],"names":["pathToRegexp","parse","compile","tokensToFunction","tokensToRegExp","DEFAULT_DELIMITER","PATH_REGEXP","RegExp","join","str","options","tokens","key","index","path","defaultDelimiter","delimiter","whitelist","undefined","pathEscaped","res","exec","m","escaped","offset","slice","length","prev","name","capture","group","modifier","k","c","matches","indexOf","push","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","Array","i","flags","data","encode","encodeURIComponent","validate","token","value","segment","isArray","TypeError","j","test","String","replace","sensitive","regexpToRegexp","keys","groups","source","match","arrayToRegexp","parts","stringToRegexp","strict","start","end","endsWith","concat","map","route","endToken","isEndDelimited","hasOwnProperty","Object","prototype","cache","Map","decodeParam","val","decodeURIComponent","err","matchPath","pathname","parentKeys","parentParams","children","cacheKey","regexp","get","set","params","prop","call","split","charAt","matchRoute","baseUrl","childMatches","childIndex","next","routeToSkip","done","childRoute","parent","childMatch","resolveRoute","context","action","isChildRoute","parentRoute","UniversalRouterSync","routes","errorHandler","router","root","resolve","pathnameOrContext","nextMatches","currentContext","resume","prevResult","error","Error","status","result"],"mappings":"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"}