import t from"path-to-regexp";const{hasOwnProperty:e}=Object.prototype,r=new Map;function n(t){try{return decodeURIComponent(t)}catch(e){return t}}function o(l,u,a,s,i){let c,h=null,p=0;return{next(f){if(l===f)return{done:!0,value:void 0};if(!h&&(h=function(o,l,u,a){const s=!o.children,i=`${o.path||""}|${s}`;let c=r.get(i);if(!c){const e=[];c={keys:e,pattern:t(o.path||"",e,{end:s})},r.set(i,c)}const h=c.pattern.exec(l);if(!h)return null;const p=h[0],f={...a};for(let t=1;t<h.length;t++){const r=c.keys[t-1],o=r.name,l=h[t];void 0===l&&e.call(f,o)||(r.repeat?f[o]=l?l.split(r.delimiter).map(n):[]:f[o]=l?n(l):l)}return{path:s||"/"!==p.charAt(p.length-1)?p:p.substr(1),keys:u.concat(c.keys),params:f}}(l,a,s,i)))return{done:!1,value:{route:l,baseUrl:u,path:h.path,keys:h.keys,params:h.params}};if(h&&l.children)for(;p<l.children.length;){if(!c){const t=l.children[p];t.parent=l,c=o(t,u+h.path,a.substr(h.path.length),h.keys,h.params)}const t=c.next(f);if(!t.done)return{done:!1,value:t.value};c=null,p++}return{done:!0,value:void 0}}}}function l(t,e){if("function"==typeof t.route.action)return t.route.action(t,e)}class u{constructor(t,e={context:{}}){if(!t||"object"!=typeof t)throw new TypeError("Invalid routes");this.baseUrl=e.baseUrl||"",this.errorHandler=e.errorHandler,this.resolveRoute=e.resolveRoute||l,this.context={router:this,...e.context},this.root=Array.isArray(t)?{path:"",children:t,parent:null}:t,this.root.parent=null}resolve(t){const e={...this.context,..."string"==typeof t?{pathname:t}:t},r=o(this.root,this.baseUrl,e.pathname.substr(this.baseUrl.length),[],null),n=this.resolveRoute;let l=null,u=null,a=e;function s(t,o=(l&&l.value?l.value.route:null),i){const c=l&&l.value?l.value.route:null,h=null===i?c:null;if(l=u||r.next(h),u=null,!t&&(l.done||!function(t,e){if(null===t)return!1;let r=e;for(;r;)if((r=r.parent)===t)return!0;return!1}(o,l.value.route)))return u=l,null;if(l.done){const t=new Error("Route not found");throw t.status=404,t}a={...e,...l.value};const p=n(a,l.value.params);return null!=p?p:s(t,o,p)}e.next=s;try{return s(!0,this.root)}catch(t){if(this.errorHandler)return this.errorHandler(t,a);throw t}}}u.pathToRegexp=t;export default u;
//# sourceMappingURL=universal-router-sync.esm.min.js.map
