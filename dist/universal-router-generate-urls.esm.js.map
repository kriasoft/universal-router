{"version":3,"file":"universal-router-generate-urls.esm.js","sources":["../src/is-child-route.ts","../src/match-path.ts","../src/match-route.ts","../src/resolve-route.ts","../src/universal-router.ts","../src/generate-urls.ts","../src/universal-router-generate-urls.ts"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\ntype WithParent = {\n  parent?: WithParent | null | undefined;\n};\n\nexport function isChildRoute(\n  parentRoute: WithParent | null,\n  childRoute: WithParent | null | undefined,\n): boolean {\n  if (parentRoute === null) return false;\n\n  let route = childRoute;\n  while (route) {\n    route = route.parent;\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'; // keep require\nimport { MatchedKeys, MatchedPath, Params, Route } from './types';\n\ntype RegexpCache = {\n  keys: MatchedKeys;\n  pattern: RegExp;\n};\n\nconst { hasOwnProperty } = Object.prototype;\n\nconst cache = new Map<string, RegexpCache>();\n\nfunction decodeParam(val: string): string {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nexport function matchPath<Context extends object, Result>(\n  route: Route<Context, Result>,\n  pathname: string,\n  parentKeys: MatchedKeys,\n  parentParams?: Params | null,\n): MatchedPath | null {\n  const end = !route.children;\n  const cacheKey = `${route.path || ''}|${end}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys: MatchedKeys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp(route.path || '', keys, { end }),\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(pathname);\n  if (!m) {\n    return null;\n  }\n\n  const path: string = m[0];\n  const params: Params = { ...parentParams };\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: !end && path.charAt(path.length - 1) === '/' ? path.substr(1) : path,\n    keys: parentKeys.concat(regexp.keys),\n    params,\n  };\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport { matchPath } from './match-path';\nimport { MatchedKeys, MatchedPath, MatchedRoute, Params, Route } from './types';\n\nexport function matchRoute<Context extends object, Result>(\n  route: Route<Context, Result>,\n  baseUrl: string,\n  pathname: string,\n  parentKeys: MatchedKeys,\n  parentParams?: Params | null,\n) {\n  let match: MatchedPath | null = null;\n  let childMatches: null | {\n    next(routeToSkip?: Route<Context, Result> | null): MatchedRoute<Context, Result>;\n  };\n  let childIndex = 0;\n\n  return {\n    next(routeToSkip?: Route<Context, Result> | null): MatchedRoute<Context, Result> {\n      if (route === routeToSkip) {\n        return { done: true, value: undefined };\n      }\n\n      if (!match) {\n        match = matchPath(route, pathname, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              baseUrl,\n              path: match.path,\n              keys: match.keys,\n              params: match.params,\n            },\n          };\n        }\n      }\n\n      if (match && route.children) {\n        while (childIndex < route.children.length) {\n          if (!childMatches) {\n            const childRoute = route.children[childIndex];\n            childRoute.parent = route;\n\n            childMatches = matchRoute(\n              childRoute,\n              baseUrl + match.path,\n              pathname.substr(match.path.length),\n              match.keys,\n              match.params,\n            );\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return { done: true, value: undefined };\n    },\n  };\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport { Params, ResultReturn, RouteContext } from './types';\n\nexport function resolveRoute<Context extends object, Result>(\n  context: RouteContext<Context, Result>,\n  params: Params,\n): ResultReturn<Result> {\n  if (typeof context.route.action === 'function') {\n    return context.route.action(context, params);\n  }\n\n  return undefined;\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp';\n\nimport { isChildRoute } from './is-child-route';\nimport { matchRoute } from './match-route';\nimport { resolveRoute } from './resolve-route';\nimport {\n  ErrorHandler,\n  MatchedRoute,\n  Options,\n  ResolveContext,\n  ResolveRoute,\n  ResultReturn,\n  Route,\n  RouteContext,\n  RouteNameMap,\n  RouteOrRoutes,\n} from './types';\n\ntype RouterContext<Context extends object, Result> = Context & {\n  router: UniversalRouter<Context, Result>;\n};\n\nexport default class UniversalRouter<Context extends object, Result> {\n  static pathToRegexp = pathToRegexp;\n\n  routesByName?: RouteNameMap;\n\n  baseUrl: string;\n  errorHandler?: ErrorHandler<Context, Result>;\n  resolveRoute: ResolveRoute<Context, Result>;\n  context: RouterContext<Context, Result>;\n  root: Route<Context, Result>;\n\n  constructor(\n    routes: RouteOrRoutes<Context, Result>,\n    options: Options<Context, Result> = { context: {} as Context },\n  ) {\n    if (!routes || typeof routes !== 'object') {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = { router: this, ...options.context } as RouterContext<Context, Result>;\n    this.root = Array.isArray(routes) ? { path: '', children: routes, parent: null } : routes;\n    this.root.parent = null;\n  }\n\n  resolve(pathnameOrContext: string | (ResolveContext & Context)): ResultReturn<Result> {\n    const context = {\n      ...this.context,\n      ...(typeof pathnameOrContext === 'string'\n        ? { pathname: pathnameOrContext }\n        : pathnameOrContext),\n    } as RouteContext<Context, Result>;\n    const match = matchRoute(\n      this.root,\n      this.baseUrl,\n      context.pathname.substr(this.baseUrl.length),\n      [],\n      null,\n    );\n    const resolve = this.resolveRoute;\n    let matches: MatchedRoute<Context, Result> | null = null;\n    let nextMatches: MatchedRoute<Context, Result> | null = null;\n    let currentContext = context;\n\n    function next(\n      resume?: boolean,\n      parent: Route<Context, Result> | null = matches && matches.value ? matches.value.route : null,\n      prevResult?: Result | null | undefined,\n    ): ResultReturn<Result> {\n      const lastRoute = matches && matches.value ? matches.value.route : null;\n      const routeToSkip = prevResult === null ? lastRoute : null;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n\n          return Promise.resolve(null);\n        }\n      }\n\n      if (matches.done) {\n        const error = new Error('Route not found');\n        (error as any).status = 404;\n\n        return Promise.reject(error);\n      }\n\n      const resolveContext = { ...context, ...matches.value };\n      currentContext = resolveContext;\n\n      return Promise.resolve(resolve(resolveContext, matches.value.params)).then((result) => {\n        if (result !== null && result !== undefined) {\n          return result;\n        }\n\n        return next(resume, parent, result);\n      });\n    }\n\n    context.next = next;\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        if (this.errorHandler) {\n          return this.errorHandler(error, currentContext);\n        }\n        throw error;\n      });\n  }\n}\n","import { Params, Route, RouteNameMap, Routes } from './types';\nimport UniversalRouter from './universal-router';\n\nconst { pathToRegexp } = UniversalRouter;\nconst cache = new Map();\n\nfunction cacheRoutes(\n  routesByName: RouteNameMap,\n  route: Route<any, any>,\n  routes?: Routes<any, any> | null | undefined,\n): void {\n  if (routesByName.has(route.name as string)) {\n    throw new Error(`Route \"${route.name}\" already exists`);\n  }\n\n  if (route.name) {\n    routesByName.set(route.name, route);\n  }\n\n  if (routes) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.children);\n    }\n  }\n}\n\nexport default function generateUrls(router: UniversalRouter<any, any>, options: any = {}) {\n  if (!(router instanceof UniversalRouter)) {\n    const duck: any = router;\n    if (typeof duck !== 'object' || !duck || !duck.root) {\n      throw new TypeError('An instance of UniversalRouter is expected');\n    }\n  }\n\n  router.routesByName = router.routesByName || new Map();\n\n  return (routeName: string, params: Params) => {\n    const map = router.routesByName as RouteNameMap;\n    let route = map.get(routeName);\n    if (!route) {\n      map.clear(); // clear cache\n      cacheRoutes(map, router.root, router.root.children);\n\n      route = map.get(routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = '';\n      let rt = route;\n      while (rt) {\n        const path = Array.isArray(rt.path) ? rt.path[0] : rt.path;\n        if (path) {\n          fullPath = path + fullPath;\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp.parse(fullPath);\n      const toPath = pathToRegexp.tokensToFunction(tokens);\n      const keys: any = Object.create(null);\n      for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n        if (typeof token !== 'string') {\n          keys[token.name] = true;\n        }\n      }\n      regexp = { toPath, keys };\n      cache.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = router.baseUrl + regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams: any = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nexport * from './types';\n\nexport { default as generateUrls } from './generate-urls';\nexport { default as UniversalRouter } from './universal-router';\n"],"names":["pathToRegexp","cache"],"mappings":";;AAAA;;;;;;;;AAaA,SAAgB,YAAY,CAC1B,WAA8B,EAC9B,UAAyC;IAEzC,IAAI,WAAW,KAAK,IAAI;QAAE,OAAO,KAAK,CAAC;IAEvC,IAAI,KAAK,GAAG,UAAU,CAAC;IACvB,OAAO,KAAK,EAAE;QACZ,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;QACrB,IAAI,KAAK,KAAK,WAAW,EAAE;YACzB,OAAO,IAAI,CAAC;SACb;KACF;IAED,OAAO,KAAK,CAAC;CACd;;AC5BD;;;;;;;;AASA,AAQA,MAAM,EAAE,cAAc,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;AAE5C,MAAM,KAAK,GAAG,IAAI,GAAG,EAAuB,CAAC;AAE7C,SAAS,WAAW,CAAC,GAAW;IAC9B,IAAI;QACF,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;KAChC;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,GAAG,CAAC;KACZ;CACF;AAED,SAAgB,SAAS,CACvB,KAA6B,EAC7B,QAAgB,EAChB,UAAuB,EACvB,YAA4B;IAE5B,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC5B,MAAM,QAAQ,GAAG,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC;IAC9C,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEjC,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,GAAgB,EAAE,CAAC;QAC7B,MAAM,GAAG;YACP,IAAI;YACJ,OAAO,EAAEA,cAAY,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC;SACvD,CAAC;QACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;KAC7B;IAED,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,IAAI,CAAC,CAAC,EAAE;QACN,OAAO,IAAI,CAAC;KACb;IAED,MAAM,IAAI,GAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAM,MAAM,GAAW,EAAE,GAAG,YAAY,EAAE,CAAC;IAE3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACjC,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/B,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,KAAK,KAAK,SAAS,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;YAC7D,IAAI,GAAG,CAAC,MAAM,EAAE;gBACd,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACzE;iBAAM;gBACL,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;aACnD;SACF;KACF;IAED,OAAO;QACL,IAAI,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;QAC1E,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACpC,MAAM;KACP,CAAC;CACH;;AC1ED;;;;;;;;AASA,SAGgB,UAAU,CACxB,KAA6B,EAC7B,OAAe,EACf,QAAgB,EAChB,UAAuB,EACvB,YAA4B;IAE5B,IAAI,KAAK,GAAuB,IAAI,CAAC;IACrC,IAAI,YAEH,CAAC;IACF,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,OAAO;QACL,IAAI,CAAC,WAA2C;YAC9C,IAAI,KAAK,KAAK,WAAW,EAAE;gBACzB,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;aACzC;YAED,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;gBAE7D,IAAI,KAAK,EAAE;oBACT,OAAO;wBACL,IAAI,EAAE,KAAK;wBACX,KAAK,EAAE;4BACL,KAAK;4BACL,OAAO;4BACP,IAAI,EAAE,KAAK,CAAC,IAAI;4BAChB,IAAI,EAAE,KAAK,CAAC,IAAI;4BAChB,MAAM,EAAE,KAAK,CAAC,MAAM;yBACrB;qBACF,CAAC;iBACH;aACF;YAED,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAC3B,OAAO,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACzC,IAAI,CAAC,YAAY,EAAE;wBACjB,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;wBAC9C,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;wBAE1B,YAAY,GAAG,UAAU,CACvB,UAAU,EACV,OAAO,GAAG,KAAK,CAAC,IAAI,EACpB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAClC,KAAK,CAAC,IAAI,EACV,KAAK,CAAC,MAAM,CACb,CAAC;qBACH;oBAED,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAClD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;wBACpB,OAAO;4BACL,IAAI,EAAE,KAAK;4BACX,KAAK,EAAE,UAAU,CAAC,KAAK;yBACxB,CAAC;qBACH;oBAED,YAAY,GAAG,IAAI,CAAC;oBACpB,UAAU,EAAE,CAAC;iBACd;aACF;YAED,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;SACzC;KACF,CAAC;CACH;;AC/ED;;;;;;;;AAWA,SAAgB,YAAY,CAC1B,OAAsC,EACtC,MAAc;IAEd,IAAI,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,EAAE;QAC9C,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;KAC9C;IAED,OAAO,SAAS,CAAC;CAClB;;ACpBD;;;;;;;;AASA,MAsBqB,eAAe;IAWlC,YACE,MAAsC,EACtC,UAAoC,EAAE,OAAO,EAAE,EAAa,EAAE;QAE9D,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YACzC,MAAM,IAAI,SAAS,CAAC,gBAAgB,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,YAAY,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,OAAO,EAAoC,CAAC;QACtF,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC;QAC1F,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACzB;IAED,OAAO,CAAC,iBAAsD;QAC5D,MAAM,OAAO,GAAG;YACd,GAAG,IAAI,CAAC,OAAO;YACf,IAAI,OAAO,iBAAiB,KAAK,QAAQ;kBACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE;kBAC/B,iBAAiB,CAAC;SACU,CAAC;QACnC,MAAM,KAAK,GAAG,UAAU,CACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAC5C,EAAE,EACF,IAAI,CACL,CAAC;QACF,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;QAClC,IAAI,OAAO,GAAyC,IAAI,CAAC;QACzD,IAAI,WAAW,GAAyC,IAAI,CAAC;QAC7D,IAAI,cAAc,GAAG,OAAO,CAAC;QAE7B,SAAS,IAAI,CACX,MAAgB,EAChB,SAAwC,OAAO,IAAI,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,EAC7F,UAAsC;YAEtC,MAAM,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;YACxE,MAAM,WAAW,GAAG,UAAU,KAAK,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC;YAC3D,OAAO,GAAG,WAAW,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjD,WAAW,GAAG,IAAI,CAAC;YAEnB,IAAI,CAAC,MAAM,EAAE;gBACX,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBAC9D,WAAW,GAAG,OAAO,CAAC;oBAEtB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBAC9B;aACF;YAED,IAAI,OAAO,CAAC,IAAI,EAAE;gBAChB,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC1C,KAAa,CAAC,MAAM,GAAG,GAAG,CAAC;gBAE5B,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC9B;YAED,MAAM,cAAc,GAAG,EAAE,GAAG,OAAO,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;YACxD,cAAc,GAAG,cAAc,CAAC;YAEhC,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM;gBAChF,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;oBAC3C,OAAO,MAAM,CAAC;iBACf;gBAED,OAAO,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;aACrC,CAAC,CAAC;SACJ;QAED,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QAEpB,OAAO,OAAO,CAAC,OAAO,EAAE;aACrB,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC,KAAK,CAAC,CAAC,KAAK;YACX,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;aACjD;YACD,MAAM,KAAK,CAAC;SACb,CAAC,CAAC;KACN;;AA5FM,4BAAY,GAAGA,cAAY,CAAC;;AC7BrC,MAAM,EAAE,YAAY,EAAE,GAAG,eAAe,CAAC;AACzC,MAAMC,OAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAExB,SAAS,WAAW,CAClB,YAA0B,EAC1B,KAAsB,EACtB,MAA4C;IAE5C,IAAI,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAc,CAAC,EAAE;QAC1C,MAAM,IAAI,KAAK,CAAC,UAAU,KAAK,CAAC,IAAI,kBAAkB,CAAC,CAAC;KACzD;IAED,IAAI,KAAK,CAAC,IAAI,EAAE;QACd,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACrC;IAED,IAAI,MAAM,EAAE;QACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC7B,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;YAC1B,WAAW,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;SAC5D;KACF;CACF;AAED,SAAwB,YAAY,CAAC,MAAiC,EAAE,UAAe,EAAE;IACvF,IAAI,EAAE,MAAM,YAAY,eAAe,CAAC,EAAE;QACxC,MAAM,IAAI,GAAQ,MAAM,CAAC;QACzB,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACnD,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAC;SACnE;KACF;IAED,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,IAAI,IAAI,GAAG,EAAE,CAAC;IAEvD,OAAO,CAAC,SAAiB,EAAE,MAAc;QACvC,MAAM,GAAG,GAAG,MAAM,CAAC,YAA4B,CAAC;QAChD,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,EAAE;YACV,GAAG,CAAC,KAAK,EAAE,CAAC;YACZ,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEpD,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,UAAU,SAAS,aAAa,CAAC,CAAC;aACnD;SACF;QAED,IAAI,MAAM,GAAGA,OAAK,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,IAAI,EAAE,GAAG,KAAK,CAAC;YACf,OAAO,EAAE,EAAE;gBACT,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;gBAC3D,IAAI,IAAI,EAAE;oBACR,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC;iBAC5B;gBACD,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;aAChB;YACD,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YACrD,MAAM,IAAI,GAAQ,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;iBACzB;aACF;YACD,MAAM,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;YAC1BA,OAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC5B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC3B;QAED,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,GAAG,CAAC;QAEjE,IAAI,OAAO,CAAC,oBAAoB,IAAI,MAAM,EAAE;YAC1C,MAAM,WAAW,GAAQ,EAAE,CAAC;YAC5B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACrB,WAAW,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;iBAChC;aACF;YACD,MAAM,KAAK,GAAG,OAAO,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;YACxD,IAAI,KAAK,EAAE;gBACT,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;aACtD;SACF;QAED,OAAO,GAAG,CAAC;KACZ,CAAC;CACH;;AC/FD;;;;;;;GAOG;;;;"}